name: droidian rootfs-builder

on:
  workflow_dispatch:
  push:
  schedule:
    - cron: "59 23 * * *"

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    name: Generate matrix
    outputs:
      matrix: ${{ steps.gen-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Generate matrix
        id: gen-matrix
        run: |
          JOBS="$(./generate_device_recipe.py --matrix)"
          echo "::set-output name=matrix::${JOBS}"

  build:
    runs-on: ubuntu-latest
    needs: generate-matrix
    strategy:
      fail-fast: true
      matrix:
        config: ${{fromJson(needs.generate-matrix.outputs.matrix)}}
    name: ${{ matrix.config.job_name }}
    steps:
      - name: Set environment variables
        run: |
          echo "current_date=$(date +'%Y%m%d')" >> $GITHUB_ENV
          echo "release_suffix=_${{ env.current_date }}" >> $GITHUB_ENV
          if [[ "${{ github.ref }}" == 'refs/tags/droidian'* ]]; then
            echo "DROIDIAN_VERSION=$(echo ${{ github.ref }} | rev | cut -d'/' -f1 | rev)" >> $GITHUB_ENV
          else
            echo "DROIDIAN_VERSION=nightly" >> $GITHUB_ENV
          fi
          echo "DROIDIAN_IDENTIFIER=${{ matrix.config.product }}-${{ matrix.config.arch }}-${{ matrix.config.edition }}-${{ matrix.config.variant }}-${{ matrix.config.apilevel }}" >> $GITHUB_ENV

      - name: QEMU set-up
        uses: docker/setup-qemu-action@v1

      - name: Create build directory
        run: mkdir -p /tmp/buildd-results

      - name: Pull container
        run: docker pull quay.io/droidian/rootfs-builder:bookworm-amd64

      - name: Start Container
        run: echo CONTAINER_HASH=$(docker run --detach --privileged -v /tmp/buildd-results:/buildd/out -v /dev:/host-dev -v /sys/fs/cgroup:/sys/fs/cgroup -v ${PWD}:/buildd/sources --security-opt seccomp:unconfined quay.io/droidian/rootfs-builder:bookworm-amd64 /sbin/init) >> $GITHUB_ENV

      - name: Build rootfs
        run: |
          docker exec $CONTAINER_HASH /bin/sh -c 'cd /buildd/sources; DROIDIAN_VERSION="${{ env.DROIDIAN_VERSION }}" ./generate_device_recipe.py ${{ matrix.config.product }} ${{ matrix.config.arch }} ${{ matrix.config.edition }} ${{ matrix.config.variant }} ${{ matrix.config.apilevel }} && debos --disable-fakemachine generated/droidian.yaml'

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: droidian-out-${{ matrix.config.product }}-${{ matrix.config.arch }}-${{ matrix.config.edition }}-${{ matrix.config.variant }}-${{ matrix.config.apilevel }}
          path: out/*
          if-no-files-found: error
          retention-days: 1
      

  prepare:
    runs-on: ubuntu-latest
    name: Create GitHub release
    needs: build
    outputs:
      upload_url: ${{ needs.build.outputs.upload_url }}
    steps:
      - name: Reuse build's environment variables
        run: |
          echo "current_date=$(date +'%Y%m%d')" >> $GITHUB_ENV
          echo "release_suffix=_${{ env.current_date }}" >> $GITHUB_ENV
          if [[ "${{ github.ref }}" == 'refs/tags/droidian'* ]]; then
            echo "DROIDIAN_VERSION=$(echo ${{ github.ref }} | rev | cut -d'/' -f1 | rev)" >> $GITHUB_ENV
          else
            echo "DROIDIAN_VERSION=nightly" >> $GITHUB_ENV
          fi
          echo "DROIDIAN_IDENTIFIER=${{ matrix.config.product }}-${{ matrix.config.arch }}-${{ matrix.config.edition }}-${{ matrix.config.variant }}-${{ matrix.config.apilevel }}" >> $GITHUB_ENV

  publish:
    runs-on: ubuntu-latest
    name: Publish ${{ matrix.config.job_name }}
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: droidian-out-${{ matrix.config.product }}-${{ matrix.config.arch }}-${{ matrix.config.edition }}-${{ matrix.config.variant }}-${{ matrix.config.apilevel }}
          path: droidian-out

      - name: Create nightly release
        if: startsWith(github.ref, 'refs/tags/droidian') != true
        uses: softprops/action-gh-release@v1
        with:
          files: droidian-out/*
          tag_name: nightly
          draft: false
          prerelease: false
